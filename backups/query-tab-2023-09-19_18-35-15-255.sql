USE basic_query;

SELECT * FROM TB_TEMPER;

-- 01. lowest/highest temperature and date in Seoul
-- area code: Seoul(108)

SELECT
		AREA_CD,
		MIN(MIN_TEMPER) AS 'MIN_TEMPER',
		MAX(MAX_TEMPER) AS 'MAX_TEMPER'
		
FROM TB_TEMPER
WHERE AREA_CD = '108'
GROUP BY AREA_CD;


SELECT 
		B.AREA_CD,
		B.STD_DE,
		B.MIN_TEMPER,
		B.MAX_TEMPER
FROM
		(
				SELECT
						AREA_CD,
						MIN(MIN_TEMPER) AS 'MIN_TEMPER',
						MAX(MAX_TEMPER) AS 'MAX_TEMPER'
		
				FROM TB_TEMPER
				WHERE AREA_CD = '108'
				GROUP BY AREA_CD
		) AS A

JOIN TB_TEMPER B ON (B.AREA_CD = A.AREA_CD AND B.MIN_TEMPER = A.MIN_TEMPER)
								 OR (B.AREA_CD = A.AREA_CD AND B.MAX_TEMPER = A.MAX_TEMPER);

-- 02. MIN/MAX TEMPER IN YOUR BIRTH DAY WITH YEAR
-- FROM 1907 10 01 ~ 2022 03 19

SELECT
		SUBSTR(A.STD_DE, 5, 4) AS MMDD,
		MIN(A.MIN_TEMPER) AS MIN_TEMPER,
		MAX(A.MAX_TEMPER) AS MAX_TEMPER
		
FROM TB_TEMPER A
WHERE A.AREA_CD = '108'
	AND A.STD_DE LIKE '%0316'

GROUP BY SUBSTR(A.STD_DE, 5, 4);


SELECT
		B.STD_DE, B.MIN_TEMPER, B.MAX_TEMPER
FROM
		(
				SELECT
						SUBSTR(A.STD_DE, 5, 4) AS MMDD,
						MIN(A.MIN_TEMPER) AS MIN_TEMPER,
						MAX(A.MAX_TEMPER) AS MAX_TEMPER
						
				FROM TB_TEMPER A
				WHERE A.AREA_CD = '108'
					AND A.STD_DE LIKE '%0316'
				
				GROUP BY SUBSTR(A.STD_DE, 5, 4)
		) AS A
JOIN TB_TEMPER B ON (SUBSTR(B.STD_DE, 5, 4) = A.MMDD AND B.MIN_TEMPER = A.MIN_TEMPER)
								 OR (SUBSTR(B.STD_DE, 5, 4) = A.MMDD AND B.MAX_TEMPER = A.MAX_TEMPER);
								 
-- 03. Which month with best gap (MAX_TEMPER-MIN_TEMPER) in 1 year
SELECT 
		SUBSTR(A.STD_DE, 5, 2) AS MM,
		ROUND(AVG(A.MAX_TEMPER - A.MIN_TEMPER), 2) AS DAILY_CROSS
FROM TB_TEMPER A
WHERE A.AREA_CD = '108'
GROUP BY SUBSTR(A.STD_DE, 5, 2)
ORDER BY DAILY_CROSS DESC
LIMIT 5;

-- 04. AVG YEARLY TEMPER
SELECT SUBSTR(A.STD_DE, 1, 4) AS YYYY,
			 ROUND(AVG(A.AVG_TEMPER), 2) AS AVG_TEMPER
FROM TB_TEMPER A
WHERE A.AREA_CD = '108'
GROUP BY SUBSTR(A.STD_DE, 1, 4)
ORDER BY SUBSTR(A.STD_DE, 1, 4);

-- 05. TEMPER DIFF FOR EACH DECADES ( 1910, 1920, 1930)
SELECT
			CASE
					WHEN YYYY BETWEEN '1900' AND '1909' THEN '1900s'
					WHEN YYYY BETWEEN '1910' AND '1919' THEN '1910s'
					WHEN YYYY BETWEEN '1920' AND '1929' THEN '1920s'
					WHEN YYYY BETWEEN '1930' AND '1939' THEN '1930s'
					WHEN YYYY BETWEEN '1940' AND '1949' THEN '1940s'
					WHEN YYYY BETWEEN '1950' AND '1959' THEN '1950s'
					WHEN YYYY BETWEEN '1960' AND '1969' THEN '1960s'
					WHEN YYYY BETWEEN '1970' AND '1979' THEN '1970s'
					WHEN YYYY BETWEEN '1980' AND '1989' THEN '1980s'
					WHEN YYYY BETWEEN '1990' AND '1999' THEN '1990s'
					WHEN YYYY BETWEEN '2000' AND '2009' THEN '2000s'
					WHEN YYYY BETWEEN '2010' AND '2019' THEN '2010s'
					WHEN YYYY BETWEEN '2020' AND '2029' THEN '2020s'
				END AS '0s'
			, ROUND(AVG(AVG_TEMPER), 2) AS 'AVG_TEMP'	
	FROM
		(
			SELECT SUBSTR(A.STD_DE, 1, 4) AS YYYY,
			 ROUND(AVG(A.AVG_TEMPER), 2) AS AVG_TEMPER
			FROM TB_TEMPER A
			WHERE A.AREA_CD = '108'
			GROUP BY SUBSTR(A.STD_DE, 1, 4)
			ORDER BY SUBSTR(A.STD_DE, 1, 4)
		) AS A
	GROUP BY CASE
							WHEN YYYY BETWEEN '1900' AND '1909' THEN '1900s'
							WHEN YYYY BETWEEN '1910' AND '1919' THEN '1910s'
							WHEN YYYY BETWEEN '1920' AND '1929' THEN '1920s'
							WHEN YYYY BETWEEN '1930' AND '1939' THEN '1930s'
							WHEN YYYY BETWEEN '1940' AND '1949' THEN '1940s'
							WHEN YYYY BETWEEN '1950' AND '1959' THEN '1950s'
							WHEN YYYY BETWEEN '1960' AND '1969' THEN '1960s'
							WHEN YYYY BETWEEN '1970' AND '1979' THEN '1970s'
							WHEN YYYY BETWEEN '1980' AND '1989' THEN '1980s'
							WHEN YYYY BETWEEN '1990' AND '1999' THEN '1990s'
							WHEN YYYY BETWEEN '2000' AND '2009' THEN '2000s'
							WHEN YYYY BETWEEN '2010' AND '2019' THEN '2010s'
							WHEN YYYY BETWEEN '2020' AND '2029' THEN '2020s'
					END;
		
SELECT
		CONCAT(SUBSTR(A.STD_DE, 1, 3), '0s') AS YYYY,
		ROUND(AVG(A.AVG_TEMPER), 2)
FROM TB_TEMPER AS A
GROUP BY
		CONCAT(SUBSTR(A.STD_DE, 1, 3), '0s')
ORDER BY YYYY;

SELECT
FLOOR(CONVERT(A.YEAR, SIGNED)/10)*10 AS '0s',
ROUND(AVG(AVGTEMP),2)
FROM
	(
		SELECT
			SUBSTR(A.STD_DE,1,4) AS YEAR,
			AVG(AVG_TEMPER) 'AVGTEMP'
			FROM TB_TEMPER_DATA AS A
			GROUP BY SUBSTR(A.STD_DE, 1,4)
			ORDER BY YEAR ASC) AS A
GROUP BY FLOOR(CONVERT(A.YEAR, SIGNED)/10)*10;